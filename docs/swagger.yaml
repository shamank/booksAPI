basePath: /
definitions:
  handler.errorResponse:
    properties:
      message:
        type: string
    type: object
  handler.getAllAuthorsResponse:
    properties:
      authors:
        items:
          $ref: '#/definitions/models.Author'
        type: array
    type: object
  handler.getAllBooksResponse:
    properties:
      books:
        items:
          $ref: '#/definitions/models.Book'
        type: array
    type: object
  handler.signInInput:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  handler.statusResponse:
    properties:
      status:
        type: string
    type: object
  models.Author:
    properties:
      birth:
        type: string
      first_name:
        type: string
      id:
        type: integer
      last_name:
        type: string
    type: object
  models.Book:
    properties:
      author_id:
        type: integer
      description:
        type: string
      id:
        type: integer
      title:
        type: string
      user_rating:
        type: number
    required:
    - description
    - title
    type: object
  models.UpdateAuthorInput:
    properties:
      first_name:
        type: string
      last_name:
        type: string
    type: object
  models.UpdateBookInput:
    properties:
      author_id:
        type: integer
      description:
        type: string
      title:
        type: string
    type: object
  models.User:
    properties:
      id:
        type: integer
      name:
        type: string
      password:
        type: string
      role_id:
        type: integer
      role_name:
        type: string
      username:
        type: string
    required:
    - name
    - password
    - username
    type: object
  models.UserScoreBook:
    properties:
      is_favorite:
        type: boolean
      rating:
        type: number
    type: object
  models.UserUpdate:
    properties:
      name:
        type: string
      role_id:
        type: integer
      username:
        type: string
    type: object
host: localhost:8000
info:
  contact: {}
  description: This is a sample server celler server.
  title: Simple booksAPI
  version: "1.0"
paths:
  /api/authors/:
    get:
      consumes:
      - application/json
      description: Get All Authors from DB
      produces:
      - application/json
      responses:
        "200":
          description: authors
          schema:
            $ref: '#/definitions/handler.getAllAuthorsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: getAllAuthors
      tags:
      - author
    post:
      consumes:
      - application/json
      description: Create new Author
      parameters:
      - description: author input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.Author'
      produces:
      - application/json
      responses:
        "200":
          description: new author id
          schema:
            type: int
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: addAuthor
      tags:
      - author
  /api/authors/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Author by ID
      parameters:
      - description: author id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: status response
          schema:
            $ref: '#/definitions/handler.statusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: deleteAuthor
      tags:
      - author
    get:
      consumes:
      - application/json
      description: Get Author by ID
      parameters:
      - description: author id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: author
          schema:
            $ref: '#/definitions/models.Author'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: getAuthor
      tags:
      - author
    put:
      consumes:
      - application/json
      description: Update Author by ID
      parameters:
      - description: author id
        in: path
        name: id
        required: true
        type: integer
      - description: params to update
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.UpdateAuthorInput'
      produces:
      - application/json
      responses:
        "200":
          description: status response
          schema:
            $ref: '#/definitions/handler.statusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: updateAuthor
      tags:
      - author
  /api/books/:
    get:
      consumes:
      - application/json
      description: Get All Books from DB
      produces:
      - application/json
      responses:
        "200":
          description: books
          schema:
            $ref: '#/definitions/handler.getAllBooksResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: getAllBooks
      tags:
      - book
    post:
      consumes:
      - application/json
      description: Create new Book
      parameters:
      - description: book input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.Book'
      produces:
      - application/json
      responses:
        "200":
          description: new book id
          schema:
            type: int
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: addBook
      tags:
      - book
  /api/books/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Book by ID
      parameters:
      - description: book id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: status response
          schema:
            $ref: '#/definitions/handler.statusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: deleteBook
      tags:
      - book
    get:
      consumes:
      - application/json
      description: Get Book by ID
      parameters:
      - description: book id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: book
          schema:
            $ref: '#/definitions/models.Book'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: getBook
      tags:
      - book
    put:
      consumes:
      - application/json
      description: Update Book by ID
      parameters:
      - description: book id
        in: path
        name: id
        required: true
        type: integer
      - description: params to update
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.UpdateBookInput'
      produces:
      - application/json
      responses:
        "200":
          description: status response
          schema:
            $ref: '#/definitions/handler.statusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: updateBook
      tags:
      - book
  /api/users/{id}:
    get:
      consumes:
      - application/json
      description: Get User by ID
      parameters:
      - description: user id
        in: path
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: user
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: getUser
      tags:
      - user
  /api/users/{user_id}:
    put:
      consumes:
      - application/json
      description: Update User by ID
      parameters:
      - description: user id
        in: path
        name: user_id
        required: true
        type: integer
      - description: user update model
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.UserUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: status response
          schema:
            $ref: '#/definitions/handler.statusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: updateUser
      tags:
      - user
  /api/users/{user_id}/authors:
    get:
      consumes:
      - application/json
      description: Get User authors list by ID
      parameters:
      - description: user id
        in: path
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: authors
          schema:
            $ref: '#/definitions/handler.getAllAuthorsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: getUserAuthors
      tags:
      - user
  /api/users/{user_id}/authors/{author_id}:
    delete:
      consumes:
      - application/json
      description: Remove Author from User list
      parameters:
      - description: user id
        in: path
        name: user_id
        required: true
        type: integer
      - description: author id
        in: path
        name: author_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: status response
          schema:
            $ref: '#/definitions/handler.statusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: removeUserAuthor
      tags:
      - user
    post:
      consumes:
      - application/json
      description: Add new author in list for User by ID
      parameters:
      - description: user id
        in: path
        name: user_id
        required: true
        type: integer
      - description: author id
        in: path
        name: author_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: status response
          schema:
            $ref: '#/definitions/handler.statusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: newUserAuthor
      tags:
      - user
  /api/users/{user_id}/books:
    get:
      consumes:
      - application/json
      description: Get User Books list
      parameters:
      - description: user id
        in: path
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: books
          schema:
            $ref: '#/definitions/handler.getAllBooksResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: getUserBooks
      tags:
      - user
  /api/users/{user_id}/books/{book_id}:
    delete:
      consumes:
      - application/json
      description: Remove Book from User list
      parameters:
      - description: user id
        in: path
        name: user_id
        required: true
        type: integer
      - description: book id
        in: path
        name: book_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: status response
          schema:
            $ref: '#/definitions/handler.statusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: removeUserBook
      tags:
      - user
    post:
      consumes:
      - application/json
      description: Add new book in list for User by ID
      parameters:
      - description: user id
        in: path
        name: user_id
        required: true
        type: integer
      - description: book id
        in: path
        name: book_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: status response
          schema:
            $ref: '#/definitions/handler.statusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: newUserBook
      tags:
      - user
    put:
      consumes:
      - application/json
      description: Set book rating for User by IDs
      parameters:
      - description: user id
        in: path
        name: user_id
        required: true
        type: integer
      - description: book id
        in: path
        name: book_id
        required: true
        type: integer
      - description: user score
        in: body
        name: book_id
        required: true
        schema:
          $ref: '#/definitions/models.UserScoreBook'
      produces:
      - application/json
      responses:
        "200":
          description: status response
          schema:
            $ref: '#/definitions/handler.statusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: setBookRating
      tags:
      - user
  /auth/sign-in:
    post:
      consumes:
      - application/json
      description: Sign in account
      parameters:
      - description: user sign in
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handler.signInInput'
      produces:
      - application/json
      responses:
        "200":
          description: token
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: SignIn
      tags:
      - auth
  /auth/sign-up:
    post:
      consumes:
      - application/json
      description: Create new account
      parameters:
      - description: Account ID
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: id
          schema:
            type: int
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: SignUP
      tags:
      - auth
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
